<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        sQAAA7EB9YPtSQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAN3SURBVEhLrVY7
        bxNBEJ47IKAgCkQQUihoqKgi6BBUlBAahBReBUIKBYgfwEOyIICiBHvXMYkiXi0iBT0tBaZESqCgCZCE
        PMRDSe72nDg5vtk7J/Z573yOGemTfbffzNzMzs4spZIBfzcJ56wt3KeWVEVg3hZqlcH/+R2vMUdzW5bB
        xQ47rx7A8E9bKj8NwJ21hfOQBv2O0Eoz4lskSxebcRgF61JeXdK2Usmov8OW3jAU10wGm0FoY4RthtZj
        BARLumNRA63Ckt5YgnPf4khNiv8Jw6GjiGA/mkmvJdQi+JP4ncMHN9RD1GXKuRdCb6GgerkYaolqDWSF
        /+ub77w/cNJPueUuyvhtdN7fht/tNOR3kvR6LeGNV/OjgM1pKizuC70S4WVflARDNygz0w7yezyvI7J3
        lHUPhiqBsNPqqs1MtJFU9/CBpai9CrCeCcg48NFoNUE4Z/S68G4hkrdwsks/IztQvoMi/GAJ9zt0v4D/
        jHLOUb3OItQ1vC9HbTLYFw3MoslwRzIQ0Imy2ghH+fjvXv1fuseh+MPER0ZKcHgbLJ0BvIstVMp73cSt
        zrSIaD7VpDHrHYbTBWASrfI1HE3V6aDI9BaxYC+DmqjlBHALhJR9NC+qMg05ndoIC6cyXzpCmYytn4V7
        zqDDH/yL8kv7mWLL0gszRxXhGA3fsMhA6i5rJ1EpqEOI+pVJh4EauKp5Ul0xrSPYeaQaU8awyNBFxenu
        X9iDfTmNoyTwteO8nyb+Jrwn2nFWnTSuw2eiY2AdGZlq7CiKFI6TUr1VNEx1Xs2x46JpcavA/v3eKC6h
        Xho5wi3GHqcKkOZVzOYefP2p+OMRAEGsoeHc1NEW/OTjFNtAQkB5icTyAW1MqhOIaNrICxrI3crZx7uR
        KKcCyjrdsS2zGjUtk9Oo+7G+e30DPoPznOTKMb3OkqplQmzp1A2JCJocEmrFYKOC+yEbYhiLJgR7xmNx
        pYvyX3dujEX+IOFch40J8JLG4hQ9qhqLWoLLXfqLgPSCiwC6EJ5jnVUAfhlDpif0Vi366pNY4S2B792x
        wjdM4b0xKrYAZCXpshdKL19v3QLSaKzKZsDp1ZE2dFot2A9Uct3MTQt0p5n6y11a4QrMqQyiNzYNE8DF
        6XD6uHOFVlqQUb+dryt6CzDEdSXzVAO44XPv1W2QO1KlOSQK0T+eGp3rulizDwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>